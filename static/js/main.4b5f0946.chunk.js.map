{"version":3,"sources":["Components/Loading.js","Components/User.js","Components/Users.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","EditModal","user","closeModal","updateUser","useState","name","setName","email","setEmail","phone","setPhone","website","setWebsite","showErr","setShowErr","Modal","show","centered","onHide","animation","Header","closeButton","Title","Body","style","color","type","value","onChange","e","target","required","textAlign","Footer","Button","onClick","variant","User","onDelete","avatar","setAvtar","liked","setLiked","isLoading","setIsLoading","showModal","setShowModal","avatarURL","useEffect","a","fetch","res","blob","data","URL","createObjectURL","getAvatar","height","alt","src","width","lkd","Users","users","map","id","App","setUsers","json","func","usrs","filter","usr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b5f0946.chunk.js","sourcesContent":["\r\nconst Loading = () => {\r\n    return (\r\n      <div className=\"spinner\">\r\n        <div className=\"cube1\"></div>\r\n        <div className=\"cube2\"></div>\r\n      </div>             \r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import {useState, useEffect} from 'react'\r\nimport {Modal,Button} from 'react-bootstrap'\r\nimport Loading from './Loading'\r\nimport { \r\n        AiTwotoneHeart,\r\n        AiOutlineHeart,\r\n        AiOutlineEdit,\r\n        AiTwotoneDelete,\r\n        AiOutlineMail,\r\n        AiOutlinePhone,\r\n        AiOutlineGlobal } from \"react-icons/ai\";\r\n\r\nconst User = ({user, onDelete}) => {\r\n    const [avatar, setAvtar] = useState()\r\n    const [liked, setLiked] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [showModal, setShowModal] = useState(false)\r\n    \r\n    const avatarURL = `https://avatars.dicebear.com/v2/avataaars/${user.name}.svg?background=%23f7f7f7`\r\n\r\n    useEffect(()=>{\r\n        // Fetches an avatar based on username\r\n        const getAvatar = async () =>{\r\n            setIsLoading(()=>true)\r\n            let res = await fetch(avatarURL)\r\n            let data = await res.blob()\r\n            data = URL.createObjectURL(data);\r\n            setAvtar(data)\r\n\r\n            setIsLoading(()=>false)\r\n        }\r\n        getAvatar()\r\n    },[avatarURL])\r\n    \r\n    const updateUser = (name, email, phone, website) =>{\r\n        user.name = name\r\n        user.email = email\r\n        user.phone = phone\r\n        user.website = website\r\n    }\r\n\r\n    const onLike = () =>{\r\n        setLiked((lkd)=>!lkd)\r\n    }\r\n    return (\r\n        <div className=\"col-xl-3 col-lg-4 col-md-6 col-12 my-3 d-flex flex-column\">\r\n        \r\n            <div className=\"card px-0 flex-fill\">\r\n                {\r\n                    isLoading ?\r\n                        <div style={{height:\"150px\"}}>\r\n                            <Loading />\r\n                        </div>\r\n                        :\r\n                        <img className=\"card-img-top\" alt={user.name} src={avatar} width=\"100\" height=\"150\"/> \r\n                        \r\n                }\r\n                <div className=\"card-body \">\r\n                    <h5 className=\"card-title\">{user.name}</h5>\r\n                    <div className=\"card-text\">\r\n                        <p className=\"d-flex \"><AiOutlineMail /><span>{user.email}</span></p>\r\n                        <p className=\"d-flex \"><AiOutlinePhone /><span>{user.phone}</span></p>\r\n                        <p className=\"d-flex \"><AiOutlineGlobal /><span>{user.website}</span></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-footer d-flex justify-content-around\">\r\n                    <span onClick={onLike}>\r\n                        \r\n                        {\r\n                            liked ?\r\n                            <AiTwotoneHeart style={{color: 'red'}} />:\r\n                            <AiOutlineHeart style={{color: 'red'}}/>\r\n                        }\r\n                        \r\n                        </span>\r\n                    <span onClick={()=>setShowModal(true)}><AiOutlineEdit/></span>\r\n                    <span onClick={()=>onDelete(user)}><AiTwotoneDelete/></span>\r\n                </div>\r\n                       \r\n            </div>\r\n            {\r\n                showModal && \r\n                <EditModal user={user} updateUser={updateUser} closeModal={()=>setShowModal(()=>false)}/>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst EditModal = ({user, closeModal, updateUser}) =>{\r\n    \r\n    const [name,setName] = useState(user.name)\r\n    const [email,setEmail] = useState(user.email)\r\n    const [phone,setPhone] = useState(user.phone)\r\n    const [website,setWebsite] = useState(user.website)\r\n    const [showErr,setShowErr] = useState(false)\r\n\r\n\r\n    const handleUpdateUser = () =>{\r\n        if(name && email && phone && website)\r\n        {\r\n            updateUser(name, email, phone, website)\r\n            closeModal()\r\n            setShowErr(()=>false)\r\n            return            \r\n        }\r\n        setShowErr(()=>true)\r\n    }\r\n\r\n    return (\r\n        <Modal show={true} centered onHide={closeModal} animation={false}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Basic Modal</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <form className=\"container\">\r\n                    <div className=\"row px-2 my-4 align-items-center\">\r\n                        <p className=\"col-md-4 text-md-right pl-0\"><span style={{color:'red'}}>*</span> Name:</p>\r\n                        <input className=\"col-md-8 form-control\" type=\"text\" name=\"name\" value={name} onChange={(e)=>setName(()=>e.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"row px-2 my-4 align-items-center\">\r\n                        <p className=\"col-md-4 text-md-right pl-0\"><span style={{color:'red'}}>*</span> Email:</p>\r\n                        <input className=\"col-md-8 form-control\" type=\"text\" name=\"name\" value={email} onChange={(e)=>setEmail(()=>e.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"row px-2 my-4 align-items-center\">\r\n                        <p className=\"col-md-4 text-md-right pl-0\"><span style={{color:'red'}}>*</span> Phone:</p>\r\n                        <input className=\"col-md-8 form-control\" type=\"text\" name=\"name\" value={phone} onChange={(e)=>setPhone(()=>e.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"row px-2 my-4 align-items-center\">\r\n                        <p className=\"col-md-4 text-md-right pl-0\"><span style={{color:'red'}}>*</span> Website:</p>\r\n                        <input className=\"col-md-8 form-control\" type=\"text\" name=\"name\" value={website} onChange={(e)=>setWebsite(()=>e.target.value)} required/>\r\n                    </div>\r\n                    {\r\n                        showErr &&\r\n                        <p style={{color: 'red', textAlign: 'right'}}>Please fill all the values</p>\r\n                    }    \r\n                </form>\r\n                \r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button onClick={closeModal} className=\"px-4\" variant=\"outline-dark\">Cancel</Button>\r\n                <Button onClick={handleUpdateUser} className=\"px-4\" variant=\"primary\">OK</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        \r\n    )\r\n}\r\nexport default User\r\n","import User from './User'\r\n\r\nconst Users = ({users, onDelete}) => {\r\n    return (\r\n        <div className=\"row\">\r\n        {\r\n            //Iterates on users array and displays each user inside card\r\n            users.map((user)=><User key={user.id} user={user} onDelete={onDelete}/>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Users\r\n","import {useState, useEffect} from 'react'\nimport Users from './Components/Users'\nimport Loading from './Components/Loading'\nimport './App.css';\n\nfunction App() {\n  const [users, setUsers] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const usersURL = 'https://jsonplaceholder.typicode.com/users'\n  \n  useEffect(()=>{\n    // Fetches users from API\n\n    const func = async() =>{\n      let res = await fetch(usersURL)\n      let data = await res.json()\n      \n      setUsers(()=>{\n        setIsLoading(()=>false)\n        return data\n      })\n    }\n    func()\n  },[])\n  \n  const onDelete = (user) =>{\n    // Removing element when delete icon is clicked\n    setUsers((usrs)=>usrs.filter((usr)=>usr!==user))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container-fuild users px-3\">\n        {\n          // Shows Loading screen while API fetches users data and displays users when fetched.\n          isLoading ?\n          <Loading />\n          :\n          <Users users={users} onDelete={onDelete}/>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}